import { OnInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';
import { CartItem } from '../../classes/cart-item';
import { CartService } from '../../services/cart.service';
import { CartViewDisplay } from '../../types';
import { LocaleFormat } from '../../interfaces/locale-format';
/**
 * Renders a view of the cart.
 *
 * @order 2
 * @howToUse "Using responsive layout"
 * ```html
 * <cart-view [display]="'responsive'">
 * </cart-view>
 * ```
 *
 * @howToUse "No images and using scrollbars on small screens"
 * ```html
 * <cart-view [images]="false" [display]="'responsive-table'">
 * </cart-view>
 * ```
 *
 * @howToUse "Using different text for headers"
 * ```html
 * <cart-view [emptyText]="headers.empty" [nameHeaderText]="headers.name" [quantityHeaderText]="headers.quantity"
 *  [priceHeaderText]="headers.quantity" [totalHeaderText]="headers.total" [taxFooterText]="footers.tax"
 *  [shippingFooterText]="footers.shipping" [totalFooterText]="footers.total"
 * >
 * </cart-view>
 * ```
 * ```typescript
 * export class MyComponent {
 *   headers = {
 *     empty: 'No items. Add some to the cart',
 *     name: 'Description',
 *     quantity: 'Amount',
 *     price: 'Cost',
 *     total: 'Total x item',
 *   }
 *   footers = {
 *     tax: 'Tax rate',
 *     shipping: 'Shipping cost',
 *     total: 'Total cost'
 *   }
 * }
 * ```
 *
 * @howToUse "Change the default empty cart content"
 * ```html
 * <cart-view [customEmptyContent]="true">
 *   <div class="my-empty-cart-view">
 *       <span style="font-size: 36px;" class="glyphicon glyphicon-shopping-cart" aria-hidden="true"></span>
 *       Your cart is empty
 *   </div>
 * </cart-view>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class CartViewComponent implements OnInit, OnChanges, OnDestroy {
    private cartService;
    private _serviceSubscription;
    /**
     * Changes the appearance how the cart view displays in different screen sizes
     */
    display: CartViewDisplay;
    /**
     * Whether to include images in the cart or not.
     */
    images: boolean;
    /**
     * The text to show when the cart has no items in it.
     */
    emptyText: string;
    /**
     * When set to `true` and the cart is empty displays the projected content of the component as the empty content.
     */
    customEmptyContent: boolean;
    /**
     * The text to display in the header of the name column.
     */
    nameHeaderText: string;
    /**
     * The text to display in the header of the quantity column.
     */
    quantityHeaderText: string;
    /**
     * The text to display in the header of the price column.
     */
    priceHeaderText: string;
    /**
     * The text to display in the header of the total per item column.
     */
    totalHeaderText: string;
    /**
     * The text to display in the tax section of the footer.
     */
    taxFooterText: string;
    /**
     * The text to display in the shipping section of the footer.
     */
    shippingFooterText: string;
    /**
     * The text to display in the total section of the footer.
     */
    totalFooterText: string;
    /**
     * Changes currency display format for the component. Overrides the value set from the service using `setCurrencyFormat`.
     */
    localeFormat: string;
    format: LocaleFormat;
    empty: boolean;
    items: CartItem[];
    taxRate: number;
    tax: number;
    shipping: number;
    cost: number;
    constructor(cartService: CartService<any>);
    update(): void;
    increase(item: CartItem): void;
    decrease(item: CartItem): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CartViewComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CartViewComponent, "cart-view", never, {
    "display": "display";
    "images": "images";
    "emptyText": "emptyText";
    "customEmptyContent": "customEmptyContent";
    "nameHeaderText": "nameHeaderText";
    "quantityHeaderText": "quantityHeaderText";
    "priceHeaderText": "priceHeaderText";
    "totalHeaderText": "totalHeaderText";
    "taxFooterText": "taxFooterText";
    "shippingFooterText": "shippingFooterText";
    "totalFooterText": "totalFooterText";
    "localeFormat": "localeFormat";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC12aWV3LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjYXJ0LXZpZXcuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENhcnRJdGVtIH0gZnJvbSAnLi4vLi4vY2xhc3Nlcy9jYXJ0LWl0ZW0nO1xyXG5pbXBvcnQgeyBDYXJ0U2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2NhcnQuc2VydmljZSc7XHJcbmltcG9ydCB7IENhcnRWaWV3RGlzcGxheSB9IGZyb20gJy4uLy4uL3R5cGVzJztcclxuaW1wb3J0IHsgTG9jYWxlRm9ybWF0IH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9sb2NhbGUtZm9ybWF0JztcclxuLyoqXHJcbiAqIFJlbmRlcnMgYSB2aWV3IG9mIHRoZSBjYXJ0LlxyXG4gKlxyXG4gKiBAb3JkZXIgMlxyXG4gKiBAaG93VG9Vc2UgXCJVc2luZyByZXNwb25zaXZlIGxheW91dFwiXHJcbiAqIGBgYGh0bWxcclxuICogPGNhcnQtdmlldyBbZGlzcGxheV09XCIncmVzcG9uc2l2ZSdcIj5cclxuICogPC9jYXJ0LXZpZXc+XHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAaG93VG9Vc2UgXCJObyBpbWFnZXMgYW5kIHVzaW5nIHNjcm9sbGJhcnMgb24gc21hbGwgc2NyZWVuc1wiXHJcbiAqIGBgYGh0bWxcclxuICogPGNhcnQtdmlldyBbaW1hZ2VzXT1cImZhbHNlXCIgW2Rpc3BsYXldPVwiJ3Jlc3BvbnNpdmUtdGFibGUnXCI+XHJcbiAqIDwvY2FydC12aWV3PlxyXG4gKiBgYGBcclxuICpcclxuICogQGhvd1RvVXNlIFwiVXNpbmcgZGlmZmVyZW50IHRleHQgZm9yIGhlYWRlcnNcIlxyXG4gKiBgYGBodG1sXHJcbiAqIDxjYXJ0LXZpZXcgW2VtcHR5VGV4dF09XCJoZWFkZXJzLmVtcHR5XCIgW25hbWVIZWFkZXJUZXh0XT1cImhlYWRlcnMubmFtZVwiIFtxdWFudGl0eUhlYWRlclRleHRdPVwiaGVhZGVycy5xdWFudGl0eVwiXHJcbiAqICBbcHJpY2VIZWFkZXJUZXh0XT1cImhlYWRlcnMucXVhbnRpdHlcIiBbdG90YWxIZWFkZXJUZXh0XT1cImhlYWRlcnMudG90YWxcIiBbdGF4Rm9vdGVyVGV4dF09XCJmb290ZXJzLnRheFwiXHJcbiAqICBbc2hpcHBpbmdGb290ZXJUZXh0XT1cImZvb3RlcnMuc2hpcHBpbmdcIiBbdG90YWxGb290ZXJUZXh0XT1cImZvb3RlcnMudG90YWxcIlxyXG4gKiA+XHJcbiAqIDwvY2FydC12aWV3PlxyXG4gKiBgYGBcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBleHBvcnQgY2xhc3MgTXlDb21wb25lbnQge1xyXG4gKiAgIGhlYWRlcnMgPSB7XHJcbiAqICAgICBlbXB0eTogJ05vIGl0ZW1zLiBBZGQgc29tZSB0byB0aGUgY2FydCcsXHJcbiAqICAgICBuYW1lOiAnRGVzY3JpcHRpb24nLFxyXG4gKiAgICAgcXVhbnRpdHk6ICdBbW91bnQnLFxyXG4gKiAgICAgcHJpY2U6ICdDb3N0JyxcclxuICogICAgIHRvdGFsOiAnVG90YWwgeCBpdGVtJyxcclxuICogICB9XHJcbiAqICAgZm9vdGVycyA9IHtcclxuICogICAgIHRheDogJ1RheCByYXRlJyxcclxuICogICAgIHNoaXBwaW5nOiAnU2hpcHBpbmcgY29zdCcsXHJcbiAqICAgICB0b3RhbDogJ1RvdGFsIGNvc3QnXHJcbiAqICAgfVxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAaG93VG9Vc2UgXCJDaGFuZ2UgdGhlIGRlZmF1bHQgZW1wdHkgY2FydCBjb250ZW50XCJcclxuICogYGBgaHRtbFxyXG4gKiA8Y2FydC12aWV3IFtjdXN0b21FbXB0eUNvbnRlbnRdPVwidHJ1ZVwiPlxyXG4gKiAgIDxkaXYgY2xhc3M9XCJteS1lbXB0eS1jYXJ0LXZpZXdcIj5cclxuICogICAgICAgPHNwYW4gc3R5bGU9XCJmb250LXNpemU6IDM2cHg7XCIgY2xhc3M9XCJnbHlwaGljb24gZ2x5cGhpY29uLXNob3BwaW5nLWNhcnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L3NwYW4+XHJcbiAqICAgICAgIFlvdXIgY2FydCBpcyBlbXB0eVxyXG4gKiAgIDwvZGl2PlxyXG4gKiA8L2NhcnQtdmlldz5cclxuICogYGBgXHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDYXJ0Vmlld0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xyXG4gICAgcHJpdmF0ZSBjYXJ0U2VydmljZTtcclxuICAgIHByaXZhdGUgX3NlcnZpY2VTdWJzY3JpcHRpb247XHJcbiAgICAvKipcclxuICAgICAqIENoYW5nZXMgdGhlIGFwcGVhcmFuY2UgaG93IHRoZSBjYXJ0IHZpZXcgZGlzcGxheXMgaW4gZGlmZmVyZW50IHNjcmVlbiBzaXplc1xyXG4gICAgICovXHJcbiAgICBkaXNwbGF5OiBDYXJ0Vmlld0Rpc3BsYXk7XHJcbiAgICAvKipcclxuICAgICAqIFdoZXRoZXIgdG8gaW5jbHVkZSBpbWFnZXMgaW4gdGhlIGNhcnQgb3Igbm90LlxyXG4gICAgICovXHJcbiAgICBpbWFnZXM6IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIFRoZSB0ZXh0IHRvIHNob3cgd2hlbiB0aGUgY2FydCBoYXMgbm8gaXRlbXMgaW4gaXQuXHJcbiAgICAgKi9cclxuICAgIGVtcHR5VGV4dDogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiBXaGVuIHNldCB0byBgdHJ1ZWAgYW5kIHRoZSBjYXJ0IGlzIGVtcHR5IGRpc3BsYXlzIHRoZSBwcm9qZWN0ZWQgY29udGVudCBvZiB0aGUgY29tcG9uZW50IGFzIHRoZSBlbXB0eSBjb250ZW50LlxyXG4gICAgICovXHJcbiAgICBjdXN0b21FbXB0eUNvbnRlbnQ6IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIFRoZSB0ZXh0IHRvIGRpc3BsYXkgaW4gdGhlIGhlYWRlciBvZiB0aGUgbmFtZSBjb2x1bW4uXHJcbiAgICAgKi9cclxuICAgIG5hbWVIZWFkZXJUZXh0OiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIFRoZSB0ZXh0IHRvIGRpc3BsYXkgaW4gdGhlIGhlYWRlciBvZiB0aGUgcXVhbnRpdHkgY29sdW1uLlxyXG4gICAgICovXHJcbiAgICBxdWFudGl0eUhlYWRlclRleHQ6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICogVGhlIHRleHQgdG8gZGlzcGxheSBpbiB0aGUgaGVhZGVyIG9mIHRoZSBwcmljZSBjb2x1bW4uXHJcbiAgICAgKi9cclxuICAgIHByaWNlSGVhZGVyVGV4dDogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgdGV4dCB0byBkaXNwbGF5IGluIHRoZSBoZWFkZXIgb2YgdGhlIHRvdGFsIHBlciBpdGVtIGNvbHVtbi5cclxuICAgICAqL1xyXG4gICAgdG90YWxIZWFkZXJUZXh0OiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIFRoZSB0ZXh0IHRvIGRpc3BsYXkgaW4gdGhlIHRheCBzZWN0aW9uIG9mIHRoZSBmb290ZXIuXHJcbiAgICAgKi9cclxuICAgIHRheEZvb3RlclRleHQ6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICogVGhlIHRleHQgdG8gZGlzcGxheSBpbiB0aGUgc2hpcHBpbmcgc2VjdGlvbiBvZiB0aGUgZm9vdGVyLlxyXG4gICAgICovXHJcbiAgICBzaGlwcGluZ0Zvb3RlclRleHQ6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICogVGhlIHRleHQgdG8gZGlzcGxheSBpbiB0aGUgdG90YWwgc2VjdGlvbiBvZiB0aGUgZm9vdGVyLlxyXG4gICAgICovXHJcbiAgICB0b3RhbEZvb3RlclRleHQ6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICogQ2hhbmdlcyBjdXJyZW5jeSBkaXNwbGF5IGZvcm1hdCBmb3IgdGhlIGNvbXBvbmVudC4gT3ZlcnJpZGVzIHRoZSB2YWx1ZSBzZXQgZnJvbSB0aGUgc2VydmljZSB1c2luZyBgc2V0Q3VycmVuY3lGb3JtYXRgLlxyXG4gICAgICovXHJcbiAgICBsb2NhbGVGb3JtYXQ6IHN0cmluZztcclxuICAgIGZvcm1hdDogTG9jYWxlRm9ybWF0O1xyXG4gICAgZW1wdHk6IGJvb2xlYW47XHJcbiAgICBpdGVtczogQ2FydEl0ZW1bXTtcclxuICAgIHRheFJhdGU6IG51bWJlcjtcclxuICAgIHRheDogbnVtYmVyO1xyXG4gICAgc2hpcHBpbmc6IG51bWJlcjtcclxuICAgIGNvc3Q6IG51bWJlcjtcclxuICAgIGNvbnN0cnVjdG9yKGNhcnRTZXJ2aWNlOiBDYXJ0U2VydmljZTxhbnk+KTtcclxuICAgIHVwZGF0ZSgpOiB2b2lkO1xyXG4gICAgaW5jcmVhc2UoaXRlbTogQ2FydEl0ZW0pOiB2b2lkO1xyXG4gICAgZGVjcmVhc2UoaXRlbTogQ2FydEl0ZW0pOiB2b2lkO1xyXG4gICAgbmdPbkluaXQoKTogdm9pZDtcclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxufVxyXG4iXX0=