import { __extends, __spread } from 'tslib';
import { EventEmitter, Component, Input, Output, Inject, LOCALE_ID, ComponentFactoryResolver, Directive, NgModuleRef, ViewContainerRef, InjectionToken, Injectable, Pipe, NgModule } from '@angular/core';
import { CurrencyPipe, getLocaleCurrencyName, CommonModule } from '@angular/common';
import { HttpClient, HttpParams, HttpRequest, HttpClientModule } from '@angular/common/http';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/common/http';

function AddToCartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r214 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelementStart(1, "add-to-cart-editor", 5);
    ɵngcc0.ɵɵlistener("valueChange", function AddToCartComponent_div_1_Template_add_to_cart_editor_valueChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r214); var ctx_r213 = ɵngcc0.ɵɵnextContext(); return ctx_r213.editorQuantity = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r209 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r209.position);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("type", ctx_r209.type)("dropdown", ctx_r209.dropdown)("value", ctx_r209.editorQuantity);
} }
function AddToCartComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 6);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r210 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r210.buttonClass)("disabled", !ctx_r210.item);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r210.buttonText, " ");
} }
function AddToCartComponent_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 0, ["*ngIf", "custom"]);
} }
function AddToCartComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    var _r216 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelementStart(1, "add-to-cart-editor", 5);
    ɵngcc0.ɵɵlistener("valueChange", function AddToCartComponent_div_5_Template_add_to_cart_editor_valueChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r216); var ctx_r215 = ɵngcc0.ɵɵnextContext(); return ctx_r215.editorQuantity = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r212 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r212.position);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("type", ctx_r212.type)("dropdown", ctx_r212.dropdown)("value", ctx_r212.editorQuantity);
} }
var _c0 = ["*"];
function CartCheckoutComponent_ng_container_0_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r222 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 3);
    ɵngcc0.ɵɵlistener("click", function CartCheckoutComponent_ng_container_0_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r222); var ctx_r221 = ɵngcc0.ɵɵnextContext(2); return ctx_r221.doCheckout(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r219 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r219.buttonClass)("disabled", ctx_r219.empty);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r219.buttonText, " ");
} }
function CartCheckoutComponent_ng_container_0_span_2_Template(rf, ctx) { if (rf & 1) {
    var _r224 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 4);
    ɵngcc0.ɵɵlistener("click", function CartCheckoutComponent_ng_container_0_span_2_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r224); var ctx_r223 = ɵngcc0.ɵɵnextContext(2); return ctx_r223.doCheckout(); });
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} }
function CartCheckoutComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, CartCheckoutComponent_ng_container_0_button_1_Template, 2, 3, "button", 1);
    ɵngcc0.ɵɵtemplate(2, CartCheckoutComponent_ng_container_0_span_2_Template, 2, 0, "span", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r217 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r217.custom);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r217.custom);
} }
function CartCheckoutComponent_ng_container_1_input_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "input", 18);
} if (rf & 2) {
    var ctx_r225 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("value", ctx_r225.paypalSettings.itemName);
} }
function CartCheckoutComponent_ng_container_1_input_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "input", 19);
} if (rf & 2) {
    var ctx_r226 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("value", ctx_r226.paypalSettings.itemNumber);
} }
function CartCheckoutComponent_ng_container_1_input_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "input", 20);
} if (rf & 2) {
    var ctx_r227 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("value", ctx_r227.paypalSettings.serviceName + "_BuyNow_WPS_" + ctx_r227.paypalSettings.country);
} }
function CartCheckoutComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "form", 5);
    ɵngcc0.ɵɵelement(2, "input", 6);
    ɵngcc0.ɵɵelement(3, "input", 7);
    ɵngcc0.ɵɵelement(4, "input", 8);
    ɵngcc0.ɵɵtemplate(5, CartCheckoutComponent_ng_container_1_input_5_Template, 1, 1, "input", 9);
    ɵngcc0.ɵɵtemplate(6, CartCheckoutComponent_ng_container_1_input_6_Template, 1, 1, "input", 10);
    ɵngcc0.ɵɵelement(7, "input", 11);
    ɵngcc0.ɵɵelement(8, "input", 12);
    ɵngcc0.ɵɵelement(9, "input", 13);
    ɵngcc0.ɵɵelement(10, "input", 14);
    ɵngcc0.ɵɵtemplate(11, CartCheckoutComponent_ng_container_1_input_11_Template, 1, 1, "input", 15);
    ɵngcc0.ɵɵelement(12, "input", 16);
    ɵngcc0.ɵɵelement(13, "img", 17);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r218 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("value", ctx_r218.paypalSettings.business);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("value", ctx_r218.paypalLocale);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r218.paypalSettings.itemName);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r218.paypalSettings.itemNumber);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("value", ctx_r218.cost);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("value", ctx_r218.currency);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("value", ctx_r218.taxRate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("value", ctx_r218.shipping);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r218.paypalSettings.serviceName && ctx_r218.paypalSettings.country);
} }
function CartSummaryComponent__svg_svg_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "svg", 7);
    ɵngcc0.ɵɵelement(1, "path", 8);
    ɵngcc0.ɵɵelement(2, "circle", 9);
    ɵngcc0.ɵɵelement(3, "circle", 10);
    ɵngcc0.ɵɵelementEnd();
} }
function CartSummaryComponent_img_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 11);
} if (rf & 2) {
    var ctx_r229 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("src", ctx_r229.icon, ɵngcc0.ɵɵsanitizeUrl);
} }
var _c1 = function (a0, a1, a2, a3, a4) { return [a0, a1, a2, a3, a4]; };
function AddToCartEditorComponent_ng_container_0_option_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r234 = ctx.$implicit;
    var ctx_r233 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("selected", item_r234.value === ctx_r233.value)("value", item_r234.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r234.label);
} }
function AddToCartEditorComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    var _r236 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "select", 1, 2);
    ɵngcc0.ɵɵlistener("change", function AddToCartEditorComponent_ng_container_0_Template_select_change_1_listener() { ɵngcc0.ɵɵrestoreView(_r236); var _r232 = ɵngcc0.ɵɵreference(2); var ctx_r235 = ɵngcc0.ɵɵnextContext(); return ctx_r235.changeValue(_r232.value); });
    ɵngcc0.ɵɵtemplate(3, AddToCartEditorComponent_ng_container_0_option_3_Template, 2, 3, "option", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r230 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r230.dropdown);
} }
function AddToCartEditorComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    var _r239 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "input", 5, 6);
    ɵngcc0.ɵɵlistener("change", function AddToCartEditorComponent_ng_container_1_Template_input_change_1_listener() { ɵngcc0.ɵɵrestoreView(_r239); var _r237 = ɵngcc0.ɵɵreference(2); var ctx_r238 = ɵngcc0.ɵɵnextContext(); return ctx_r238.changeValue(_r237.value); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r231 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("type", ctx_r231.type)("value", ctx_r231.value);
} }
function CartViewComponent_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r242 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r242.emptyText, " ");
} }
function CartViewComponent_ng_container_0_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 0, ["*ngIf", "customEmptyContent"]);
} }
function CartViewComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, CartViewComponent_ng_container_0_div_1_Template, 2, 1, "div", 1);
    ɵngcc0.ɵɵtemplate(2, CartViewComponent_ng_container_0_2_Template, 1, 0, undefined, 0);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r240 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r240.customEmptyContent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r240.customEmptyContent);
} }
var _c2 = function (a0) { return { "background-image": a0 }; };
function CartViewComponent_ng_container_1_ng_container_1_div_1_div_12_Template(rf, ctx) { if (rf & 1) {
    var _r253 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 20);
    ɵngcc0.ɵɵelement(1, "div", 21);
    ɵngcc0.ɵɵelementStart(2, "div", 22);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 23);
    ɵngcc0.ɵɵelementStart(5, "button", 24);
    ɵngcc0.ɵɵlistener("click", function CartViewComponent_ng_container_1_ng_container_1_div_1_div_12_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r253); var cartItem_r251 = ctx.$implicit; var ctx_r252 = ɵngcc0.ɵɵnextContext(4); return ctx_r252.increase(cartItem_r251); });
    ɵngcc0.ɵɵtext(6, " + ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "span", 25);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "button", 26);
    ɵngcc0.ɵɵlistener("click", function CartViewComponent_ng_container_1_ng_container_1_div_1_div_12_Template_button_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r253); var cartItem_r251 = ctx.$implicit; var ctx_r254 = ɵngcc0.ɵɵnextContext(4); return ctx_r254.decrease(cartItem_r251); });
    ɵngcc0.ɵɵtext(10, " - ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "div", 27);
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵpipe(13, "currency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "div", 28);
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵpipe(16, "currency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var cartItem_r251 = ctx.$implicit;
    var ctx_r247 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(17, _c2, "url(" + cartItem_r251.getImage() + ")"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", cartItem_r251.getName(), " ");
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(cartItem_r251.getQuantity());
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBindV(13, 5, ɵngcc0.ɵɵpureFunction5(19, _c1, cartItem_r251.getPrice(), ctx_r247.format.currencyCode, ctx_r247.format.display, ctx_r247.format.digitsInfo, ctx_r247.format.locale)), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBindV(16, 11, ɵngcc0.ɵɵpureFunction5(25, _c1, cartItem_r251.total(), ctx_r247.format.currencyCode, ctx_r247.format.display, ctx_r247.format.digitsInfo, ctx_r247.format.locale)), " ");
} }
function CartViewComponent_ng_container_1_ng_container_1_div_1_div_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 16);
} }
function CartViewComponent_ng_container_1_ng_container_1_div_1_div_24_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 16);
} }
function CartViewComponent_ng_container_1_ng_container_1_div_1_div_32_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 16);
} }
var _c3 = function (a0) { return { "no-images": a0 }; };
function CartViewComponent_ng_container_1_ng_container_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelementStart(1, "div", 5);
    ɵngcc0.ɵɵelementStart(2, "div", 6);
    ɵngcc0.ɵɵelement(3, "div", 7);
    ɵngcc0.ɵɵelementStart(4, "div", 8);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 9);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 10);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "div", 11);
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(12, CartViewComponent_ng_container_1_ng_container_1_div_1_div_12_Template, 17, 31, "div", 12);
    ɵngcc0.ɵɵelementStart(13, "div", 13);
    ɵngcc0.ɵɵelementStart(14, "div", 14);
    ɵngcc0.ɵɵtemplate(15, CartViewComponent_ng_container_1_ng_container_1_div_1_div_15_Template, 1, 0, "div", 15);
    ɵngcc0.ɵɵelement(16, "div", 16);
    ɵngcc0.ɵɵelement(17, "div", 16);
    ɵngcc0.ɵɵelement(18, "div", 16);
    ɵngcc0.ɵɵelementStart(19, "div", 17);
    ɵngcc0.ɵɵtext(20);
    ɵngcc0.ɵɵpipe(21, "percent");
    ɵngcc0.ɵɵpipe(22, "currency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(23, "div", 14);
    ɵngcc0.ɵɵtemplate(24, CartViewComponent_ng_container_1_ng_container_1_div_1_div_24_Template, 1, 0, "div", 15);
    ɵngcc0.ɵɵelement(25, "div", 16);
    ɵngcc0.ɵɵelement(26, "div", 16);
    ɵngcc0.ɵɵelement(27, "div", 16);
    ɵngcc0.ɵɵelementStart(28, "div", 18);
    ɵngcc0.ɵɵtext(29);
    ɵngcc0.ɵɵpipe(30, "currency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(31, "div", 14);
    ɵngcc0.ɵɵtemplate(32, CartViewComponent_ng_container_1_ng_container_1_div_1_div_32_Template, 1, 0, "div", 15);
    ɵngcc0.ɵɵelement(33, "div", 16);
    ɵngcc0.ɵɵelement(34, "div", 16);
    ɵngcc0.ɵɵelement(35, "div", 16);
    ɵngcc0.ɵɵelementStart(36, "div", 19);
    ɵngcc0.ɵɵtext(37);
    ɵngcc0.ɵɵpipe(38, "currency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r246 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r246.display + "-display");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(39, _c3, !ctx_r246.images));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r246.nameHeaderText, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r246.quantityHeaderText, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r246.priceHeaderText, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r246.totalHeaderText, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r246.items);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r246.images);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate3(" ", ctx_r246.taxFooterText, ": (", ɵngcc0.ɵɵpipeBind3(21, 17, ctx_r246.taxRate, ctx_r246.format.digitsInfo, ctx_r246.format.locale), ") ", ɵngcc0.ɵɵpipeBindV(22, 21, ɵngcc0.ɵɵpureFunction5(41, _c1, ctx_r246.tax, ctx_r246.format.currencyCode, ctx_r246.format.display, ctx_r246.format.digitsInfo, ctx_r246.format.locale)), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r246.images);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate2(" ", ctx_r246.shippingFooterText, ": ", ɵngcc0.ɵɵpipeBindV(30, 27, ɵngcc0.ɵɵpureFunction5(47, _c1, ctx_r246.shipping, ctx_r246.format.currencyCode, ctx_r246.format.display, ctx_r246.format.digitsInfo, ctx_r246.format.locale)), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r246.images);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate2(" ", ctx_r246.totalFooterText, ": ", ɵngcc0.ɵɵpipeBindV(38, 33, ɵngcc0.ɵɵpureFunction5(53, _c1, ctx_r246.cost, ctx_r246.format.currencyCode, ctx_r246.format.display, ctx_r246.format.digitsInfo, ctx_r246.format.locale)), " ");
} }
function CartViewComponent_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, CartViewComponent_ng_container_1_ng_container_1_div_1_Template, 39, 59, "div", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r244 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r244.empty);
} }
function CartViewComponent_ng_container_1_ng_container_2_th_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "th", 7);
} }
function CartViewComponent_ng_container_1_ng_container_2_tr_14_td_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "td", 21);
} if (rf & 2) {
    var cartItem_r257 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(1, _c2, "url(" + cartItem_r257.getImage() + ")"));
} }
function CartViewComponent_ng_container_1_ng_container_2_tr_14_Template(rf, ctx) { if (rf & 1) {
    var _r261 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵtemplate(1, CartViewComponent_ng_container_1_ng_container_2_tr_14_td_1_Template, 1, 3, "td", 32);
    ɵngcc0.ɵɵelementStart(2, "td", 22);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "td", 23);
    ɵngcc0.ɵɵelementStart(5, "button", 24);
    ɵngcc0.ɵɵlistener("click", function CartViewComponent_ng_container_1_ng_container_2_tr_14_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r261); var cartItem_r257 = ctx.$implicit; var ctx_r260 = ɵngcc0.ɵɵnextContext(3); return ctx_r260.increase(cartItem_r257); });
    ɵngcc0.ɵɵtext(6, " + ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "span", 25);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "button", 26);
    ɵngcc0.ɵɵlistener("click", function CartViewComponent_ng_container_1_ng_container_2_tr_14_Template_button_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r261); var cartItem_r257 = ctx.$implicit; var ctx_r262 = ɵngcc0.ɵɵnextContext(3); return ctx_r262.decrease(cartItem_r257); });
    ɵngcc0.ɵɵtext(10, " - ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "td", 27);
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵpipe(13, "currency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "td", 28);
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵpipe(16, "currency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var cartItem_r257 = ctx.$implicit;
    var ctx_r256 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r256.images);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(cartItem_r257.getName());
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(cartItem_r257.getQuantity());
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBindV(13, 5, ɵngcc0.ɵɵpureFunction5(17, _c1, cartItem_r257.getPrice(), ctx_r256.format.currencyCode, ctx_r256.format.display, ctx_r256.format.digitsInfo, ctx_r256.format.locale)), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBindV(16, 11, ɵngcc0.ɵɵpureFunction5(23, _c1, cartItem_r257.total(), ctx_r256.format.currencyCode, ctx_r256.format.display, ctx_r256.format.digitsInfo, ctx_r256.format.locale)), " ");
} }
function CartViewComponent_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "table", 29);
    ɵngcc0.ɵɵelementStart(2, "thead", 6);
    ɵngcc0.ɵɵelementStart(3, "tr");
    ɵngcc0.ɵɵtemplate(4, CartViewComponent_ng_container_1_ng_container_2_th_4_Template, 1, 0, "th", 30);
    ɵngcc0.ɵɵelementStart(5, "th", 8);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "th", 9);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "th", 10);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "th", 11);
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "tbody");
    ɵngcc0.ɵɵtemplate(14, CartViewComponent_ng_container_1_ng_container_2_tr_14_Template, 17, 29, "tr", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(15, "tfoot", 13);
    ɵngcc0.ɵɵelementStart(16, "tr", 14);
    ɵngcc0.ɵɵelement(17, "td", 16);
    ɵngcc0.ɵɵelementStart(18, "td", 17);
    ɵngcc0.ɵɵtext(19);
    ɵngcc0.ɵɵpipe(20, "percent");
    ɵngcc0.ɵɵpipe(21, "currency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(22, "tr", 14);
    ɵngcc0.ɵɵelement(23, "td", 16);
    ɵngcc0.ɵɵelementStart(24, "td", 18);
    ɵngcc0.ɵɵtext(25);
    ɵngcc0.ɵɵpipe(26, "currency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(27, "tr", 14);
    ɵngcc0.ɵɵelement(28, "td", 16);
    ɵngcc0.ɵɵelementStart(29, "td", 19);
    ɵngcc0.ɵɵtext(30);
    ɵngcc0.ɵɵpipe(31, "currency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r245 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r245.images);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r245.nameHeaderText);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r245.quantityHeaderText);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r245.priceHeaderText);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r245.totalHeaderText);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r245.items);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵattribute("colspan", ctx_r245.images ? 4 : 3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate3(" ", ctx_r245.taxFooterText, ": (", ɵngcc0.ɵɵpipeBind3(20, 16, ctx_r245.taxRate, ctx_r245.format.digitsInfo, ctx_r245.format.locale), ") ", ɵngcc0.ɵɵpipeBindV(21, 20, ɵngcc0.ɵɵpureFunction5(38, _c1, ctx_r245.tax, ctx_r245.format.currencyCode, ctx_r245.format.display, ctx_r245.format.digitsInfo, ctx_r245.format.locale)), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵattribute("colspan", ctx_r245.images ? 4 : 3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2(" ", ctx_r245.shippingFooterText, ": ", ɵngcc0.ɵɵpipeBindV(26, 26, ɵngcc0.ɵɵpureFunction5(44, _c1, ctx_r245.shipping, ctx_r245.format.currencyCode, ctx_r245.format.display, ctx_r245.format.digitsInfo, ctx_r245.format.locale)), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵattribute("colspan", ctx_r245.images ? 4 : 3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2(" ", ctx_r245.totalFooterText, ": ", ɵngcc0.ɵɵpipeBindV(31, 32, ɵngcc0.ɵɵpureFunction5(50, _c1, ctx_r245.cost, ctx_r245.format.currencyCode, ctx_r245.format.display, ctx_r245.format.digitsInfo, ctx_r245.format.locale)), " ");
} }
function CartViewComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, CartViewComponent_ng_container_1_ng_container_1_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(2, CartViewComponent_ng_container_1_ng_container_2_Template, 32, 56, "ng-container", 0);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r241 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r241.display !== "table");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r241.display === "table");
} }
function CartShowcaseComponent_div_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c4 = function (a0, a1, a2, a3, a4, a5) { return [a0, a1, a2, a3, a4, a5]; };
function CartShowcaseComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "div", 3);
    ɵngcc0.ɵɵtemplate(2, CartShowcaseComponent_div_1_ng_container_2_Template, 1, 0, "ng-container", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var carItem_r264 = ctx.$implicit;
    var ctx_r263 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction6(6, _c4, ctx_r263.xsClass, ctx_r263.sClass, ctx_r263.mClass, ctx_r263.lClass, ctx_r263.xlClass, ctx_r263.ratioClass));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("cartShowcaseOutlet", ctx_r263.itemComponent)("cartShowcaseOutletItem", carItem_r264)("cartShowcaseOutletFormat", ctx_r263.format)("cartShowcaseOutletInjector", ctx_r263.injector)("cartShowcaseOutletNgModuleFactory", ctx_r263.moduleFactory);
} }
function parseLocaleFormat(format) {
    if (!format) {
        throw new Error('Invalid format for currency. Expected a non empty string');
    }
    var res = { currencyCode: undefined, display: 'symbol', digitsInfo: undefined, locale: undefined };
    var props = ['currencyCode', 'display', 'digitsInfo', 'locale'];
    var parts = format.split(':');
    var partsLength = parts.length;
    if (partsLength > 4) {
        throw new Error("Invalid format for currency. Expected a value in the form " + props.join(':') + " and got " + format);
    }
    parts.forEach(function (p, idx) {
        var value = p;
        if (value === 'auto') {
            value = idx === 1 ? 'symbol' : undefined;
        }
        res[props[idx]] = value;
    });
    return res;
}
var CartService = /** @class */ (function () {
    function CartService() {
        this.localeFormat = parseLocaleFormat('auto');
        this.format = 'auto';
        this.onChange = new EventEmitter();
        this.onItemAdded = new EventEmitter();
        this.onItemRemoved = new EventEmitter();
        this.onItemsChanged = new EventEmitter();
        this.onTaxChange = new EventEmitter();
        this.onShippingChange = new EventEmitter();
    }
    CartService.prototype.getTax = function () {
        return this.cost() * (this.getTaxRate() / 100);
    };
    CartService.prototype.totalCost = function () {
        return this.cost() + this.getTax() + this.getShipping();
    };
    CartService.prototype.setLocaleFormat = function (format) {
        this.localeFormat = parseLocaleFormat(format);
        this.format = format;
        this.onChange.emit({ change: 'format', value: this.format });
    };
    CartService.prototype.getLocaleFormat = function (object) {
        if (object === void 0) { object = false; }
        return object ? this.localeFormat : this.format;
    };
    CartService.prototype.toObject = function () {
        return {
            taxRate: this.getTaxRate(),
            shipping: this.getShipping(),
            items: this.getItems()
        };
    };
    return CartService;
}());
var CartItem = /** @class */ (function () {
    function CartItem() {
    }
    CartItem.prototype.total = function () {
        return this.getPrice() * this.getQuantity();
    };
    return CartItem;
}());
var AddToCartComponent = /** @class */ (function () {
    function AddToCartComponent(cartService) {
        this.cartService = cartService;
        this._editorQuantity = 1;
        this.hasEditor = false;
        this.horizontalEditor = true;
        this.editorPrecedence = 'before';
        this.custom = false;
        this.buttonText = 'Add to cart';
        this.buttonClass = 'add-to-cart-button';
        this.type = 'button';
        this.position = 'left';
        this.dropdown = [
            { label: '1 item', value: 1 },
            { label: '2 items', value: 2 },
            { label: '5 items', value: 5 }
        ];
        this.change = new EventEmitter();
        this.added = new EventEmitter();
    }
    Object.defineProperty(AddToCartComponent.prototype, "editorQuantity", {
        get: function () {
            return this._editorQuantity;
        },
        set: function (value) {
            this._editorQuantity = value;
            this.change.emit(value);
        },
        enumerable: true,
        configurable: true
    });
    AddToCartComponent.prototype.ngOnInit = function () {
        this.computeClass();
    };
    AddToCartComponent.prototype.itemQuantity = function () {
        if (this.type === 'button') {
            if (this.quantity) {
                return this.quantity;
            }
            return this.item.getQuantity();
        }
        else {
            return this._editorQuantity;
        }
    };
    AddToCartComponent.prototype.ngOnChanges = function (changes) {
        if (changes['type']) {
            this.hasEditor = changes['type'].currentValue !== 'button';
            if (changes['type'].currentValue === 'dropdown' && this.dropdown.length) {
                var quantity_1 = this.itemQuantity();
                var match = this.dropdown.find(function (i) { return i.value === quantity_1; });
                if (!match) {
                    this._editorQuantity = this.dropdown[0].value;
                }
            }
        }
        if (changes['position']) {
            var pos = changes['position'].currentValue;
            this.horizontalEditor = pos === 'left' || pos === 'right';
            this.editorPrecedence = pos === 'left' || pos === 'top' ? 'before' : 'after';
        }
        this.computeClass();
    };
    AddToCartComponent.prototype.addToCart = function (evt) {
        evt.stopPropagation();
        if (this.item) {
            var quantity = this.itemQuantity();
            this.item.setQuantity(quantity);
            this.cartService.addItem(this.item);
            this.added.emit(this.item);
        }
    };
    AddToCartComponent.prototype.computeClass = function () {
        this.containerClass = [
            'add-to-cart-' + this.type,
            this.horizontalEditor ?
                'editor-position-horizontal' :
                'editor-position-vertical'
        ];
    };
AddToCartComponent.ɵfac = function AddToCartComponent_Factory(t) { return new (t || AddToCartComponent)(ɵngcc0.ɵɵdirectiveInject(CartService)); };
AddToCartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AddToCartComponent, selectors: [["add-to-cart"]], inputs: { custom: "custom", buttonText: "buttonText", buttonClass: "buttonClass", type: "type", position: "position", dropdown: "dropdown", item: "item", quantity: "quantity" }, outputs: { change: "change", added: "added" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 6, vars: 5, consts: [[1, "add-to-cart", 3, "ngClass"], ["class", "add-to-cart-component", 3, "ngClass", 4, "ngIf"], [1, "cart-button-container", 3, "click"], [4, "ngIf"], [1, "add-to-cart-component", 3, "ngClass"], [3, "type", "dropdown", "value", "valueChange"], ["type", "button", 3, "ngClass", "disabled"]], template: function AddToCartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, AddToCartComponent_div_1_Template, 2, 4, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵlistener("click", function AddToCartComponent_Template_div_click_2_listener($event) { return ctx.addToCart($event); });
        ɵngcc0.ɵɵtemplate(3, AddToCartComponent_ng_container_3_Template, 3, 3, "ng-container", 3);
        ɵngcc0.ɵɵtemplate(4, AddToCartComponent_4_Template, 1, 0, undefined, 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, AddToCartComponent_div_5_Template, 2, 4, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.containerClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.editorPrecedence === "before" && ctx.hasEditor);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.custom);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.custom);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.editorPrecedence === "after" && ctx.hasEditor);
    } }, directives: function () { return [ɵngcc1.NgClass, ɵngcc1.NgIf, AddToCartEditorComponent]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AddToCartComponent, [{
        type: Component,
        args: [{
                selector: 'add-to-cart',
                template: "<div class=\"add-to-cart\" [ngClass]=\"containerClass\">\n  <div class=\"add-to-cart-component\" [ngClass]=\"position\"\n       *ngIf=\"editorPrecedence === 'before' && hasEditor\">\n    <add-to-cart-editor [type]=\"type\" [dropdown]=\"dropdown\" [(value)]=\"editorQuantity\"></add-to-cart-editor>\n  </div>\n  <div class=\"cart-button-container\" (click)=\"addToCart($event)\">\n    <ng-container *ngIf=\"!custom\">\n      <button type=\"button\" [ngClass]=\"buttonClass\" [disabled]=\"!item\">\n        {{buttonText}}\n      </button>\n    </ng-container>\n    <ng-content *ngIf=\"custom\">\n    </ng-content>\n  </div>\n  <div class=\"add-to-cart-component\" [ngClass]=\"position\"\n       *ngIf=\"editorPrecedence === 'after' && hasEditor\">\n    <add-to-cart-editor [type]=\"type\" [dropdown]=\"dropdown\" [(value)]=\"editorQuantity\"></add-to-cart-editor>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: CartService }]; }, { custom: [{
            type: Input
        }], buttonText: [{
            type: Input
        }], buttonClass: [{
            type: Input
        }], type: [{
            type: Input
        }], position: [{
            type: Input
        }], dropdown: [{
            type: Input
        }], change: [{
            type: Output
        }], added: [{
            type: Output
        }], item: [{
            type: Input
        }], quantity: [{
            type: Input
        }] }); })();
    return AddToCartComponent;
}());
AddToCartComponent.ctorParameters = function () { return [
    { type: CartService, },
]; };
AddToCartComponent.propDecorators = {
    "custom": [{ type: Input },],
    "item": [{ type: Input },],
    "buttonText": [{ type: Input },],
    "buttonClass": [{ type: Input },],
    "type": [{ type: Input },],
    "position": [{ type: Input },],
    "dropdown": [{ type: Input },],
    "quantity": [{ type: Input },],
    "change": [{ type: Output },],
    "added": [{ type: Output },],
};
var CartCheckoutComponent = /** @class */ (function () {
    function CartCheckoutComponent(cartService, httpClient, locale) {
        this.cartService = cartService;
        this.httpClient = httpClient;
        this.locale = locale;
        this.empty = true;
        this.cost = 0;
        this.taxRate = 0;
        this.shipping = 0;
        this.currency = 'USD';
        this.paypalLocale = 'en';
        this.custom = false;
        this.buttonText = 'Checkout';
        this.buttonClass = 'cart-checkout-button';
        this.service = 'log';
        this.settings = null;
        this.checkout = new EventEmitter();
        this.error = new EventEmitter();
        this.getLocaleCurrencyName = getLocaleCurrencyName;
    }
    CartCheckoutComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.updateCart(true);
        this._serviceSubscription = this.cartService
            .onChange
            .subscribe(function (evt) { return _this.updateCart(evt.change === 'format'); });
    };
    CartCheckoutComponent.prototype.updateCart = function (formatChange) {
        this.empty = this.cartService.isEmpty();
        this.cost = this.cartService.cost();
        this.taxRate = this.cartService.getTaxRate();
        this.shipping = this.cartService.getShipping();
        if (formatChange) {
            this.updateLocale();
        }
    };
    CartCheckoutComponent.prototype.updateLocale = function () {
        this.format = this.localeFormat ?
            parseLocaleFormat(this.localeFormat) : (this.cartService.getLocaleFormat(true));
        var loc = this.format.locale || this.locale;
        this.paypalLocale = loc.substring(0, 2);
        this.currency = this.format.currencyCode || this.getCurrency(loc);
    };
    CartCheckoutComponent.prototype.getCurrency = function (locale) {
        var currencyCode = this.getLocaleCurrencyName(locale);
        if (!currencyCode) {
            return 'USD';
        }
        if (currencyCode.length === 3) {
            return currencyCode;
        }
        var fmt = new CurrencyPipe(locale);
        var val = fmt.transform(0, undefined, 'code', '1.0-0', locale);
        var pre = val.startsWith('0');
        return val.substr(pre ? -3 : 0, 3);
    };
    CartCheckoutComponent.prototype.doCheckout = function () {
        var _this = this;
        var cart = this.cartService.toObject();
        switch (this.service) {
            case 'log':
                console.log(cart);
                this.checkout.emit(cart);
                break;
            case 'http':
                if (!this.settings) {
                    throw new Error('Missing settings configuration');
                }
                var verbs = ['POST', 'PUT', 'PATCH'];
                var _a = this.httpSettings, url = _a.url, _b = _a.method, method = _b === void 0 ? 'POST' : _b, options = _a.options, body = _a.body;
                var methodUpper = method.toUpperCase();
                if (verbs.indexOf(methodUpper) === -1) {
                    throw new Error("Invalid http verb found in method setting. Expected one of " + verbs.join(' ') + " and got " + method);
                }
                if (body) {
                    cart = typeof body === 'function' ? body(cart) : Object.assign({}, cart, body);
                }
                if (options && options.headers && options.headers.has('Content-Type')) {
                    var contentType = options.headers.get('Content-Type');
                    if (contentType.startsWith('application/x-www-form-urlencoded')) {
                        cart = new HttpParams({ fromObject: cart });
                    }
                }
                this.httpClient
                    .request(new HttpRequest(methodUpper, url, cart, options))
                    .toPromise()
                    .then(function (response) {
                    _this.checkout.emit(response);
                })
                    .catch(function (err) {
                    _this.error.emit(err);
                });
                break;
        }
    };
    CartCheckoutComponent.prototype.ngOnChanges = function (changes) {
        if (changes['settings'] && changes['settings'].currentValue) {
            var hasOwn = Object.prototype.hasOwnProperty;
            var value = changes['settings'].currentValue;
            if (hasOwn.call(value, 'business')) {
                this.paypalSettings = changes['settings'].currentValue;
            }
            if (hasOwn.call(value, 'url')) {
                this.httpSettings = changes['settings'].currentValue;
            }
        }
        if (changes['localeFormat']) {
            this.updateLocale();
        }
    };
    CartCheckoutComponent.prototype.ngOnDestroy = function () {
        this._serviceSubscription.unsubscribe();
    };
CartCheckoutComponent.ɵfac = function CartCheckoutComponent_Factory(t) { return new (t || CartCheckoutComponent)(ɵngcc0.ɵɵdirectiveInject(CartService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.HttpClient), ɵngcc0.ɵɵdirectiveInject(LOCALE_ID)); };
CartCheckoutComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CartCheckoutComponent, selectors: [["cart-checkout"]], inputs: { custom: "custom", buttonText: "buttonText", buttonClass: "buttonClass", service: "service", settings: "settings", localeFormat: "localeFormat" }, outputs: { checkout: "checkout", error: "error" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 2, vars: 2, consts: [[4, "ngIf"], [3, "ngClass", "disabled", "click", 4, "ngIf"], [3, "click", 4, "ngIf"], [3, "ngClass", "disabled", "click"], [3, "click"], ["action", "https://www.paypal.com/cgi-bin/webscr", "method", "post", "target", "_top"], ["type", "hidden", "name", "cmd", "value", "_xclick"], ["type", "hidden", "name", "business", 3, "value"], ["type", "hidden", "name", "lc", 3, "value"], ["type", "hidden", "name", "item_name", 3, "value", 4, "ngIf"], ["type", "hidden", "name", "item_number", 3, "value", 4, "ngIf"], ["type", "hidden", "name", "amount", 3, "value"], ["type", "hidden", "name", "currency_code", 3, "value"], ["type", "hidden", "name", "tax_rate", 3, "value"], ["type", "hidden", "name", "shipping", 3, "value"], ["type", "hidden", "name", "bn", 3, "value", 4, "ngIf"], ["type", "image", "src", "https://www.paypalobjects.com/en_US/i/btn/btn_buynowCC_LG.gif", "border", "0", "name", "submit", "alt", "PayPal - The safer, easier way to pay online!"], ["alt", "", "border", "0", "src", "https://www.paypalobjects.com/en_US/i/scr/pixel.gif", "width", "1", "height", "1"], ["type", "hidden", "name", "item_name", 3, "value"], ["type", "hidden", "name", "item_number", 3, "value"], ["type", "hidden", "name", "bn", 3, "value"]], template: function CartCheckoutComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, CartCheckoutComponent_ng_container_0_Template, 3, 2, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, CartCheckoutComponent_ng_container_1_Template, 14, 9, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.service === "log" || ctx.service === "http");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.service === "paypal");
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CartCheckoutComponent, [{
        type: Component,
        args: [{
                selector: 'cart-checkout',
                template: "<ng-container *ngIf=\"service === 'log' || service === 'http'\">\n  <button [ngClass]=\"buttonClass\" [disabled]=\"empty\" *ngIf=\"!custom\" (click)=\"doCheckout()\">\n    {{buttonText}}\n  </button>\n  <span (click)=\"doCheckout()\" *ngIf=\"custom\">\n    <ng-content>\n    </ng-content>\n  </span>\n</ng-container>\n<ng-container *ngIf=\"service === 'paypal'\">\n  <form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_top\">\n    <input type=\"hidden\" name=\"cmd\" value=\"_xclick\"/>\n    <input type=\"hidden\" name=\"business\" value=\"{{paypalSettings.business}}\"/>\n    <input type=\"hidden\" name=\"lc\" value=\"{{paypalLocale}}\"/>\n    <input type=\"hidden\" name=\"item_name\" value=\"{{paypalSettings.itemName}}\" *ngIf=\"paypalSettings.itemName\"/>\n    <input type=\"hidden\" name=\"item_number\" value=\"{{paypalSettings.itemNumber}}\" *ngIf=\"paypalSettings.itemNumber\"/>\n    <input type=\"hidden\" name=\"amount\" value=\"{{cost}}\"/>\n    <input type=\"hidden\" name=\"currency_code\" value=\"{{currency}}\"/>\n    <input type=\"hidden\" name=\"tax_rate\" value=\"{{taxRate}}\"/>\n    <input type=\"hidden\" name=\"shipping\" value=\"{{shipping}}\"/>\n    <input type=\"hidden\" name=\"bn\" value=\"{{paypalSettings.serviceName + '_BuyNow_WPS_' + paypalSettings.country}}\"\n           *ngIf=\"paypalSettings.serviceName && paypalSettings.country\"/>\n    <input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_buynowCC_LG.gif\" border=\"0\" name=\"submit\"\n           alt=\"PayPal - The safer, easier way to pay online!\"/>\n    <img alt=\"\" border=\"0\" src=\"https://www.paypalobjects.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\"/>\n  </form>\n</ng-container>\n"
            }]
    }], function () { return [{ type: CartService }, { type: ɵngcc2.HttpClient }, { type: undefined, decorators: [{
                type: Inject,
                args: [LOCALE_ID]
            }] }]; }, { custom: [{
            type: Input
        }], buttonText: [{
            type: Input
        }], buttonClass: [{
            type: Input
        }], service: [{
            type: Input
        }], settings: [{
            type: Input
        }], checkout: [{
            type: Output
        }], error: [{
            type: Output
        }], localeFormat: [{
            type: Input
        }] }); })();
    return CartCheckoutComponent;
}());
CartCheckoutComponent.ctorParameters = function () { return [
    { type: CartService, },
    { type: HttpClient, },
    { type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID,] },] },
]; };
CartCheckoutComponent.propDecorators = {
    "custom": [{ type: Input },],
    "buttonText": [{ type: Input },],
    "buttonClass": [{ type: Input },],
    "service": [{ type: Input },],
    "settings": [{ type: Input },],
    "localeFormat": [{ type: Input },],
    "checkout": [{ type: Output },],
    "error": [{ type: Output },],
};
var CartSummaryComponent = /** @class */ (function () {
    function CartSummaryComponent(cartService) {
        this.cartService = cartService;
        this.noItemsText = 'No items';
        this.oneItemText = 'One item';
        this.manyItemsText = '# items';
        this.totalItems = 0;
        this.totalCost = 0;
    }
    CartSummaryComponent.prototype.updateItemsText = function () {
        var text = this.noItemsText;
        if (this.totalItems > 0) {
            text = this.totalItems === 1 ? this.oneItemText : this.manyItemsText;
        }
        this.itemsText = text.replace('#', this.totalItems.toString());
    };
    CartSummaryComponent.prototype.updateComponent = function () {
        this.totalItems = this.cartService.itemCount();
        this.totalCost = !this.cartService.isEmpty() ? this.cartService.totalCost() : 0;
        if (!this.localeFormat) {
            this.format = (this.cartService.getLocaleFormat(true));
        }
        this.updateItemsText();
    };
    CartSummaryComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.updateComponent();
        this._serviceSubscription = this.cartService.onChange.subscribe(function () {
            _this.updateComponent();
        });
    };
    CartSummaryComponent.prototype.ngOnChanges = function (changes) {
        if (changes['localeFormat']) {
            this.format = this.localeFormat ?
                parseLocaleFormat(this.localeFormat) : (this.cartService.getLocaleFormat(true));
        }
        if (changes['noItemsText'] || changes['oneItemText'] || changes['manyItemsText']) {
            this.updateItemsText();
        }
    };
    CartSummaryComponent.prototype.ngOnDestroy = function () {
        this._serviceSubscription.unsubscribe();
    };
CartSummaryComponent.ɵfac = function CartSummaryComponent_Factory(t) { return new (t || CartSummaryComponent)(ɵngcc0.ɵɵdirectiveInject(CartService)); };
CartSummaryComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CartSummaryComponent, selectors: [["cart-summary"]], inputs: { noItemsText: "noItemsText", oneItemText: "oneItemText", manyItemsText: "manyItemsText", icon: "icon", localeFormat: "localeFormat" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 10, vars: 16, consts: [[1, "cart-summary"], [1, "cart-summary-icon"], ["version", "1.1", "class", "summary-icon", "xmlns", "http://www.w3.org/2000/svg", 0, "xmlns", "xlink", "http://www.w3.org/1999/xlink", "viewBox", "0 0 32 32", 4, "ngIf"], ["class", "summary-icon", "alt", "cart-summary-icon", 3, "src", 4, "ngIf"], [1, "cart-summary-contents"], [1, "cart-summary-items"], [1, "cart-summary-cost"], ["version", "1.1", "xmlns", "http://www.w3.org/2000/svg", 0, "xmlns", "xlink", "http://www.w3.org/1999/xlink", "viewBox", "0 0 32 32", 1, "summary-icon"], ["stroke", "currentColor", "stroke-width", "2", "stroke-linecap", "round", "fill", "none", "stroke-linejoin", "round", "d", "M2,4 L6,4 L10,20 L21,20 L25,10 L8,10 M13,10 L13,20 M18,20 L18,10 M10,15 L23,15"], ["fill", "currentColor", "cx", "11", "cy", "24", "r", "2"], ["fill", "currentColor", "cx", "21", "cy", "24", "r", "2"], ["alt", "cart-summary-icon", 1, "summary-icon", 3, "src"]], template: function CartSummaryComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, CartSummaryComponent__svg_svg_2_Template, 4, 0, "svg", 2);
        ɵngcc0.ɵɵtemplate(3, CartSummaryComponent_img_3_Template, 1, 1, "img", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "div", 5);
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 6);
        ɵngcc0.ɵɵtext(8);
        ɵngcc0.ɵɵpipe(9, "currency");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.icon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.icon);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.itemsText, " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBindV(9, 4, ɵngcc0.ɵɵpureFunction5(10, _c1, ctx.totalCost, ctx.format.currencyCode, ctx.format.display, ctx.format.digitsInfo, ctx.format.locale)), " ");
    } }, directives: [ɵngcc1.NgIf], pipes: [ɵngcc1.CurrencyPipe], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CartSummaryComponent, [{
        type: Component,
        args: [{
                selector: 'cart-summary',
                template: "<div class=\"cart-summary\">\n  <div class=\"cart-summary-icon\">\n    <svg *ngIf=\"!icon\" version=\"1.1\" class=\"summary-icon\" xmlns=\"http://www.w3.org/2000/svg\"\n         xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 32 32\">\n      <path stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" fill=\"none\" stroke-linejoin=\"round\"\n            d=\"M2,4 L6,4 L10,20 L21,20 L25,10 L8,10 M13,10 L13,20 M18,20 L18,10 M10,15 L23,15\"/>\n      <circle fill=\"currentColor\" cx=\"11\" cy=\"24\" r=\"2\"/>\n      <circle fill=\"currentColor\" cx=\"21\" cy=\"24\" r=\"2\"/>\n    </svg>\n    <img *ngIf=\"icon\" [src]=\"icon\" class=\"summary-icon\" alt=\"cart-summary-icon\">\n  </div>\n  <div class=\"cart-summary-contents\">\n    <div class=\"cart-summary-items\">\n      {{itemsText}}\n    </div>\n    <div class=\"cart-summary-cost\">\n      {{totalCost | currency:format.currencyCode:format.display:format.digitsInfo:format.locale}}\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: CartService }]; }, { noItemsText: [{
            type: Input
        }], oneItemText: [{
            type: Input
        }], manyItemsText: [{
            type: Input
        }], icon: [{
            type: Input
        }], localeFormat: [{
            type: Input
        }] }); })();
    return CartSummaryComponent;
}());
CartSummaryComponent.ctorParameters = function () { return [
    { type: CartService, },
]; };
CartSummaryComponent.propDecorators = {
    "icon": [{ type: Input },],
    "noItemsText": [{ type: Input },],
    "oneItemText": [{ type: Input },],
    "manyItemsText": [{ type: Input },],
    "localeFormat": [{ type: Input },],
};
var AddToCartEditorComponent = /** @class */ (function () {
    function AddToCartEditorComponent() {
        this.type = 'text';
        this.value = 1;
        this.valueChange = new EventEmitter();
    }
    AddToCartEditorComponent.prototype.changeValue = function (value) {
        var val = parseFloat(value);
        this.valueChange.emit(Number.isNaN(val) ? 1 : val);
    };
AddToCartEditorComponent.ɵfac = function AddToCartEditorComponent_Factory(t) { return new (t || AddToCartEditorComponent)(); };
AddToCartEditorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AddToCartEditorComponent, selectors: [["add-to-cart-editor"]], inputs: { type: "type", value: "value", dropdown: "dropdown" }, outputs: { valueChange: "valueChange" }, decls: 2, vars: 2, consts: [[4, "ngIf"], [1, "add-to-cart-input", 3, "change"], ["selectAmount", ""], [3, "selected", "value", 4, "ngFor", "ngForOf"], [3, "selected", "value"], [1, "add-to-cart-input", 3, "type", "value", "change"], ["inputAmount", ""]], template: function AddToCartEditorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, AddToCartEditorComponent_ng_container_0_Template, 4, 1, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, AddToCartEditorComponent_ng_container_1_Template, 3, 2, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.type === "dropdown");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.type === "number" || ctx.type === "text");
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AddToCartEditorComponent, [{
        type: Component,
        args: [{
                selector: 'add-to-cart-editor',
                template: "<ng-container *ngIf=\"type === 'dropdown'\">\n  <select class=\"add-to-cart-input\" #selectAmount (change)=\"changeValue(selectAmount.value)\">\n    <option [selected]=\"item.value === value\" *ngFor=\"let item of dropdown\" [value]=\"item.value\">{{item.label}}</option>\n  </select>\n</ng-container>\n<ng-container *ngIf=\"type === 'number' || type === 'text'\">\n  <input class=\"add-to-cart-input\" #inputAmount [type]=\"type\" (change)=\"changeValue(inputAmount.value)\" [value]=\"value\">\n</ng-container>\n"
            }]
    }], function () { return []; }, { type: [{
            type: Input
        }], value: [{
            type: Input
        }], valueChange: [{
            type: Output
        }], dropdown: [{
            type: Input
        }] }); })();
    return AddToCartEditorComponent;
}());
AddToCartEditorComponent.ctorParameters = function () { return []; };
AddToCartEditorComponent.propDecorators = {
    "type": [{ type: Input },],
    "dropdown": [{ type: Input },],
    "value": [{ type: Input },],
    "valueChange": [{ type: Output },],
};
var CartViewComponent = /** @class */ (function () {
    function CartViewComponent(cartService) {
        this.cartService = cartService;
        this.display = 'responsive-table';
        this.images = true;
        this.emptyText = 'Your cart is empty';
        this.customEmptyContent = false;
        this.nameHeaderText = 'Name';
        this.quantityHeaderText = 'Quantity';
        this.priceHeaderText = 'Price';
        this.totalHeaderText = 'Total';
        this.taxFooterText = 'Tax';
        this.shippingFooterText = 'Shipping';
        this.totalFooterText = 'Total';
        this.empty = true;
        this.taxRate = 0;
        this.tax = 0;
        this.shipping = 0;
        this.cost = 0;
    }
    CartViewComponent.prototype.update = function () {
        this.empty = this.cartService.isEmpty();
        this.items = this.cartService.getItems();
        this.taxRate = this.cartService.getTaxRate() / 100;
        this.tax = this.cartService.getTax();
        this.shipping = this.cartService.getShipping();
        this.cost = this.cartService.totalCost();
        if (!this.localeFormat) {
            this.format = (this.cartService.getLocaleFormat(true));
        }
    };
    CartViewComponent.prototype.increase = function (item) {
        item.setQuantity(item.getQuantity() + 1);
        this.cartService.addItem(item);
    };
    CartViewComponent.prototype.decrease = function (item) {
        if (item.getQuantity() > 1) {
            item.setQuantity(item.getQuantity() - 1);
            this.cartService.addItem(item);
        }
        else {
            this.cartService.removeItem(item.getId());
        }
    };
    CartViewComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.update();
        this._serviceSubscription = this.cartService.onChange.subscribe(function () {
            _this.update();
        });
    };
    CartViewComponent.prototype.ngOnChanges = function (changes) {
        if (changes['localeFormat']) {
            this.format = this.localeFormat ?
                parseLocaleFormat(this.localeFormat) : (this.cartService.getLocaleFormat(true));
        }
    };
    CartViewComponent.prototype.ngOnDestroy = function () {
        this._serviceSubscription.unsubscribe();
    };
CartViewComponent.ɵfac = function CartViewComponent_Factory(t) { return new (t || CartViewComponent)(ɵngcc0.ɵɵdirectiveInject(CartService)); };
CartViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CartViewComponent, selectors: [["cart-view"]], inputs: { display: "display", images: "images", emptyText: "emptyText", customEmptyContent: "customEmptyContent", nameHeaderText: "nameHeaderText", quantityHeaderText: "quantityHeaderText", priceHeaderText: "priceHeaderText", totalHeaderText: "totalHeaderText", taxFooterText: "taxFooterText", shippingFooterText: "shippingFooterText", totalFooterText: "totalFooterText", localeFormat: "localeFormat" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 2, vars: 2, consts: [[4, "ngIf"], ["class", "cart-view-empty", 4, "ngIf"], [1, "cart-view-empty"], ["class", "cart-view", 3, "ngClass", 4, "ngIf"], [1, "cart-view", 3, "ngClass"], [1, "cart-list-view", 3, "ngClass"], [1, "cart-list-header"], [1, "cart-list-header-value", "cart-list-image-header"], [1, "cart-list-header-value", "cart-list-name-header"], [1, "cart-list-header-value", "cart-list-quantity-header"], [1, "cart-list-header-value", "cart-list-price-header"], [1, "cart-list-header-value", "cart-list-total-header"], ["class", "cart-list-item", 4, "ngFor", "ngForOf"], [1, "cart-list-footer"], [1, "cart-list-summary"], ["class", "cart-empty-summary", 4, "ngIf"], [1, "cart-empty-summary"], [1, "cart-tax-summary"], [1, "cart-shipping-summary"], [1, "cart-total-summary"], [1, "cart-list-item"], [1, "cart-list-value", "cart-list-image-value", 3, "ngStyle"], [1, "cart-list-value", "cart-list-name-value"], [1, "cart-list-value", "cart-list-quantity-value"], ["type", "button", 1, "cart-increase-button", 3, "click"], [1, "cart-list-quantity-content"], ["type", "button", 1, "cart-decrease-button", 3, "click"], [1, "cart-list-value", "cart-list-price-value"], [1, "cart-list-value", "cart-list-total-value"], [1, "cart-view", "table-display"], ["class", "cart-list-header-value cart-list-image-header", 4, "ngIf"], [4, "ngFor", "ngForOf"], ["class", "cart-list-value cart-list-image-value", 3, "ngStyle", 4, "ngIf"]], template: function CartViewComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, CartViewComponent_ng_container_0_Template, 3, 2, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, CartViewComponent_ng_container_1_Template, 3, 2, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.empty);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.empty);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgStyle], pipes: [ɵngcc1.PercentPipe, ɵngcc1.CurrencyPipe], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CartViewComponent, [{
        type: Component,
        args: [{
                selector: 'cart-view',
                template: "<ng-container *ngIf=\"empty\">\n  <div *ngIf=\"!customEmptyContent\" class=\"cart-view-empty\">\n    {{emptyText}}\n  </div>\n  <ng-content *ngIf=\"customEmptyContent\"></ng-content>\n</ng-container>\n<ng-container *ngIf=\"!empty\">\n  <ng-container *ngIf=\"display !== 'table'\">\n    <div *ngIf=\"!empty\" class=\"cart-view\" [ngClass]=\"display + '-display'\">\n      <div class=\"cart-list-view\" [ngClass]=\"{'no-images': !images}\">\n        <div class=\"cart-list-header\">\n          <div class=\"cart-list-header-value cart-list-image-header\">\n          </div>\n          <div class=\"cart-list-header-value cart-list-name-header\">\n            {{nameHeaderText}}\n          </div>\n          <div class=\"cart-list-header-value cart-list-quantity-header\">\n            {{quantityHeaderText}}\n          </div>\n          <div class=\"cart-list-header-value cart-list-price-header\">\n            {{priceHeaderText}}\n          </div>\n          <div class=\"cart-list-header-value cart-list-total-header\">\n            {{totalHeaderText}}\n          </div>\n        </div>\n        <div *ngFor=\"let cartItem of items\" class=\"cart-list-item\">\n          <div class=\"cart-list-value cart-list-image-value\"\n               [ngStyle]=\"{'background-image': 'url(' + cartItem.getImage() + ')'}\">\n          </div>\n          <div class=\"cart-list-value cart-list-name-value\">\n            {{cartItem.getName()}}\n          </div>\n          <div class=\"cart-list-value cart-list-quantity-value\">\n            <button type=\"button\" class=\"cart-increase-button\" (click)=\"increase(cartItem)\">\n              +\n            </button>\n            <span class=\"cart-list-quantity-content\">{{cartItem.getQuantity()}}</span>\n            <button type=\"button\" class=\"cart-decrease-button\" (click)=\"decrease(cartItem)\">\n              -\n            </button>\n          </div>\n          <div class=\"cart-list-value cart-list-price-value\">\n            {{cartItem.getPrice() | currency:format.currencyCode:format.display:format.digitsInfo:format.locale}}\n          </div>\n          <div class=\"cart-list-value cart-list-total-value\">\n            {{cartItem.total() | currency:format.currencyCode:format.display:format.digitsInfo:format.locale}}\n          </div>\n        </div>\n        <div class=\"cart-list-footer\">\n          <div class=\"cart-list-summary\">\n            <div class=\"cart-empty-summary\" *ngIf=\"images\"></div>\n            <div class=\"cart-empty-summary\"></div>\n            <div class=\"cart-empty-summary\"></div>\n            <div class=\"cart-empty-summary\"></div>\n            <div class=\"cart-tax-summary\">\n              {{taxFooterText}}: ({{taxRate | percent:format.digitsInfo:format.locale}})\n              {{tax | currency:format.currencyCode:format.display:format.digitsInfo:format.locale}}\n            </div>\n          </div>\n          <div class=\"cart-list-summary\">\n            <div class=\"cart-empty-summary\" *ngIf=\"images\"></div>\n            <div class=\"cart-empty-summary\"></div>\n            <div class=\"cart-empty-summary\"></div>\n            <div class=\"cart-empty-summary\"></div>\n            <div class=\"cart-shipping-summary\">\n              {{shippingFooterText}}:\n              {{shipping | currency:format.currencyCode:format.display:format.digitsInfo:format.locale}}\n            </div>\n          </div>\n          <div class=\"cart-list-summary\">\n            <div class=\"cart-empty-summary\" *ngIf=\"images\"></div>\n            <div class=\"cart-empty-summary\"></div>\n            <div class=\"cart-empty-summary\"></div>\n            <div class=\"cart-empty-summary\"></div>\n            <div class=\"cart-total-summary\">\n              {{totalFooterText}}:\n              {{cost | currency:format.currencyCode:format.display:format.digitsInfo:format.locale}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"display === 'table'\">\n    <table class=\"cart-view table-display\">\n      <thead class=\"cart-list-header\">\n      <tr>\n        <th class=\"cart-list-header-value cart-list-image-header\" *ngIf=\"images\"></th>\n        <th class=\"cart-list-header-value cart-list-name-header\">{{nameHeaderText}}</th>\n        <th class=\"cart-list-header-value cart-list-quantity-header\">{{quantityHeaderText}}</th>\n        <th class=\"cart-list-header-value cart-list-price-header\">{{priceHeaderText}}</th>\n        <th class=\"cart-list-header-value cart-list-total-header\">{{totalHeaderText}}</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let cartItem of items\">\n        <td class=\"cart-list-value cart-list-image-value\" *ngIf=\"images\"\n            [ngStyle]=\"{'background-image': 'url(' + cartItem.getImage() + ')'}\">\n        </td>\n        <td class=\"cart-list-value cart-list-name-value\">{{cartItem.getName()}}</td>\n        <td class=\"cart-list-value cart-list-quantity-value\">\n          <button type=\"button\" class=\"cart-increase-button\" (click)=\"increase(cartItem)\">\n            +\n          </button>\n          <span class=\"cart-list-quantity-content\">{{cartItem.getQuantity()}}</span>\n          <button type=\"button\" class=\"cart-decrease-button\" (click)=\"decrease(cartItem)\">\n            -\n          </button>\n        </td>\n        <td class=\"cart-list-value cart-list-price-value\">\n          {{cartItem.getPrice() | currency:format.currencyCode:format.display:format.digitsInfo:format.locale}}\n        </td>\n        <td class=\"cart-list-value cart-list-total-value\">\n          {{cartItem.total() | currency:format.currencyCode:format.display:format.digitsInfo:format.locale}}\n        </td>\n      </tr>\n      </tbody>\n      <tfoot class=\"cart-list-footer\">\n      <tr class=\"cart-list-summary\">\n        <td [attr.colspan]=\"images ? 4 : 3\" class=\"cart-empty-summary\"></td>\n        <td class=\"cart-tax-summary\">\n          {{taxFooterText}}: ({{taxRate | percent:format.digitsInfo:format.locale}})\n          {{tax | currency:format.currencyCode:format.display:format.digitsInfo:format.locale}}\n        </td>\n      </tr>\n      <tr class=\"cart-list-summary\">\n        <td [attr.colspan]=\"images ? 4 : 3\" class=\"cart-empty-summary\"></td>\n        <td class=\"cart-shipping-summary\">\n          {{shippingFooterText}}:\n          {{shipping | currency:format.currencyCode:format.display:format.digitsInfo:format.locale}}\n        </td>\n      </tr>\n      <tr class=\"cart-list-summary\">\n        <td [attr.colspan]=\"images ? 4 : 3\" class=\"cart-empty-summary\"></td>\n        <td class=\"cart-total-summary\">\n          {{totalFooterText}}:\n          {{cost | currency:format.currencyCode:format.display:format.digitsInfo:format.locale}}\n        </td>\n      </tr>\n      </tfoot>\n    </table>\n  </ng-container>\n</ng-container>\n"
            }]
    }], function () { return [{ type: CartService }]; }, { display: [{
            type: Input
        }], images: [{
            type: Input
        }], emptyText: [{
            type: Input
        }], customEmptyContent: [{
            type: Input
        }], nameHeaderText: [{
            type: Input
        }], quantityHeaderText: [{
            type: Input
        }], priceHeaderText: [{
            type: Input
        }], totalHeaderText: [{
            type: Input
        }], taxFooterText: [{
            type: Input
        }], shippingFooterText: [{
            type: Input
        }], totalFooterText: [{
            type: Input
        }], localeFormat: [{
            type: Input
        }] }); })();
    return CartViewComponent;
}());
CartViewComponent.ctorParameters = function () { return [
    { type: CartService, },
]; };
CartViewComponent.propDecorators = {
    "display": [{ type: Input },],
    "images": [{ type: Input },],
    "emptyText": [{ type: Input },],
    "customEmptyContent": [{ type: Input },],
    "nameHeaderText": [{ type: Input },],
    "quantityHeaderText": [{ type: Input },],
    "priceHeaderText": [{ type: Input },],
    "totalHeaderText": [{ type: Input },],
    "taxFooterText": [{ type: Input },],
    "shippingFooterText": [{ type: Input },],
    "totalFooterText": [{ type: Input },],
    "localeFormat": [{ type: Input },],
};
var CartShowcaseItemComponent = /** @class */ (function () {
    function CartShowcaseItemComponent() {
    }
CartShowcaseItemComponent.ɵfac = function CartShowcaseItemComponent_Factory(t) { return new (t || CartShowcaseItemComponent)(); };
CartShowcaseItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CartShowcaseItemComponent, selectors: [["cart-showcase-item"]], decls: 7, vars: 8, consts: [[1, "showcase-item", "default-sc-item", 3, "ngStyle"], [1, "default-sc-description"], [1, "default-sc-name"], [1, "default-sc-price"]], template: function CartShowcaseItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵpipe(6, "cartCurrency");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(6, _c2, "url(" + ctx.item.getImage() + ")"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.item.getName(), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(6, 3, ctx.item.getPrice(), ctx.format), " ");
    } }, directives: function () { return [ɵngcc1.NgStyle]; }, pipes: function () { return [CartCurrencyPipe]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CartShowcaseItemComponent, [{
        type: Component,
        args: [{
                selector: 'cart-showcase-item',
                template: "<div class=\"showcase-item default-sc-item\" [ngStyle]=\"{'background-image': 'url(' + item.getImage() + ')'}\">\n  <div class=\"default-sc-description\">\n    <div class=\"default-sc-name\">\n      {{item.getName()}}\n    </div>\n    <div class=\"default-sc-price\">\n      {{item.getPrice() | cartCurrency:format}}\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return []; }, null); })();
    return CartShowcaseItemComponent;
}());
CartShowcaseItemComponent.ctorParameters = function () { return []; };
var CartShowcaseComponent = /** @class */ (function () {
    function CartShowcaseComponent(cartService) {
        this.cartService = cartService;
        this.xsClass = 'sc-container-xs-12';
        this.sClass = 'sc-container-s-6';
        this.mClass = 'sc-container-m-4';
        this.lClass = 'sc-container-l-4';
        this.xlClass = 'sc-container-xl-3';
        this.ratioClass = 'sc-ratio-1-1';
        this.xsCols = 1;
        this.sCols = 2;
        this.mCols = 3;
        this.lCols = 3;
        this.xlCols = 4;
        this.columns = 12;
        this.itemComponent = CartShowcaseItemComponent;
        this.aspectRatio = '1:1';
    }
    CartShowcaseComponent.prototype.getColumnSize = function (value) {
        return Math.floor(this.columns / value);
    };
    CartShowcaseComponent.prototype.ngOnChanges = function (changes) {
        var columnProps = ['xsCols', 'sCols', 'mCols', 'lCols', 'xlCols'];
        var classPrefix = ['xs', 's', 'm', 'l', 'xl'];
        for (var i = 0; i < columnProps.length; i++) {
            var prop = columnProps[i];
            var colChanges = changes[prop];
            if (changes['columns'] || colChanges) {
                var prefix = classPrefix[i];
                var size = this.getColumnSize(this[prop]);
                this[prefix + "Class"] = "sc-container-" + prefix + "-" + size;
            }
        }
        if (changes['aspectRatio']) {
            var newRatio = changes['aspectRatio'].currentValue;
            var values = newRatio.split(':');
            if (values.length === 2) {
                this.ratioClass = "sc-ratio-" + values[0] + "-" + values[1];
            }
        }
        if (changes['localeFormat']) {
            this.format = this.localeFormat || (this.cartService.getLocaleFormat());
        }
    };
    CartShowcaseComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.format = this.localeFormat || (this.cartService.getLocaleFormat());
        this._serviceSubscription = this.cartService.onChange.subscribe(function (evt) {
            if (evt.change === 'format' && !_this.localeFormat) {
                _this.format = (_this.cartService.getLocaleFormat());
            }
        });
    };
    CartShowcaseComponent.prototype.ngOnDestroy = function () {
        this._serviceSubscription.unsubscribe();
    };
CartShowcaseComponent.ɵfac = function CartShowcaseComponent_Factory(t) { return new (t || CartShowcaseComponent)(ɵngcc0.ɵɵdirectiveInject(CartService)); };
CartShowcaseComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CartShowcaseComponent, selectors: [["cart-showcase"]], inputs: { xsCols: "xsCols", sCols: "sCols", mCols: "mCols", lCols: "lCols", xlCols: "xlCols", columns: "columns", itemComponent: "itemComponent", aspectRatio: "aspectRatio", items: "items", injector: "injector", moduleFactory: "moduleFactory", localeFormat: "localeFormat" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 1, consts: [[1, "cart-showcase"], ["class", "sc-item-container", 3, "ngClass", 4, "ngFor", "ngForOf"], [1, "sc-item-container", 3, "ngClass"], [1, "sc-item-wrapper"], [4, "cartShowcaseOutlet", "cartShowcaseOutletItem", "cartShowcaseOutletFormat", "cartShowcaseOutletInjector", "cartShowcaseOutletNgModuleFactory"]], template: function CartShowcaseComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, CartShowcaseComponent_div_1_Template, 3, 13, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.items);
    } }, directives: function () { return [ɵngcc1.NgForOf, ɵngcc1.NgClass, ShowcaseOutletDirective]; }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CartShowcaseComponent, [{
        type: Component,
        args: [{
                selector: 'cart-showcase',
                template: "<div class=\"cart-showcase\">\n  <div class=\"sc-item-container\" *ngFor=\"let carItem of items\"\n       [ngClass]=\"[xsClass, sClass, mClass, lClass, xlClass, ratioClass]\">\n    <div class=\"sc-item-wrapper\">\n      <ng-container\n        *cartShowcaseOutlet=\"itemComponent;item:carItem;format:format;injector:injector;ngModuleFactory:moduleFactory\">\n      </ng-container>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: CartService }]; }, { xsCols: [{
            type: Input
        }], sCols: [{
            type: Input
        }], mCols: [{
            type: Input
        }], lCols: [{
            type: Input
        }], xlCols: [{
            type: Input
        }], columns: [{
            type: Input
        }], itemComponent: [{
            type: Input
        }], aspectRatio: [{
            type: Input
        }], items: [{
            type: Input
        }], injector: [{
            type: Input
        }], moduleFactory: [{
            type: Input
        }], localeFormat: [{
            type: Input
        }] }); })();
    return CartShowcaseComponent;
}());
CartShowcaseComponent.ctorParameters = function () { return [
    { type: CartService, },
]; };
CartShowcaseComponent.propDecorators = {
    "xsCols": [{ type: Input },],
    "sCols": [{ type: Input },],
    "mCols": [{ type: Input },],
    "lCols": [{ type: Input },],
    "xlCols": [{ type: Input },],
    "columns": [{ type: Input },],
    "items": [{ type: Input },],
    "itemComponent": [{ type: Input },],
    "injector": [{ type: Input },],
    "moduleFactory": [{ type: Input },],
    "aspectRatio": [{ type: Input },],
    "localeFormat": [{ type: Input },],
};
var ShowcaseOutletDirective = /** @class */ (function () {
    function ShowcaseOutletDirective(viewContainerRef) {
        this.viewContainerRef = viewContainerRef;
        this._componentRef = null;
        this._moduleRef = null;
    }
    ShowcaseOutletDirective.prototype.cleanModule = function () {
        if (this._moduleRef) {
            this._moduleRef.destroy();
        }
    };
    ShowcaseOutletDirective.prototype.ngOnChanges = function (changes) {
        var templateChange = Object.keys(changes).length !== 1 || !changes['cartShowcaseOutletFormat'];
        if (templateChange) {
            this.viewContainerRef.clear();
            this._componentRef = null;
            if (this.cartShowcaseOutlet) {
                var elInjector = this.cartShowcaseOutletInjector || this.viewContainerRef.parentInjector;
                if (changes['cartShowcaseOutletNgModuleFactory']) {
                    this.cleanModule();
                    if (this.cartShowcaseOutletNgModuleFactory) {
                        var parentModule = elInjector.get(NgModuleRef);
                        this._moduleRef = this.cartShowcaseOutletNgModuleFactory.create(parentModule.injector);
                    }
                    else {
                        this._moduleRef = null;
                    }
                }
                var componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :
                    elInjector.get(ComponentFactoryResolver);
                var componentFactory = componentFactoryResolver.resolveComponentFactory(this.cartShowcaseOutlet);
                this._componentRef = this.viewContainerRef.createComponent(componentFactory, this.viewContainerRef.length, elInjector);
                var instance = this._componentRef.instance;
                instance.item = this.cartShowcaseOutletItem;
                instance.format = this.cartShowcaseOutletFormat;
            }
        }
        else {
            if (this._componentRef) {
                this._componentRef.instance.format = this.cartShowcaseOutletFormat;
            }
        }
    };
    ShowcaseOutletDirective.prototype.ngOnDestroy = function () {
        this.cleanModule();
    };
ShowcaseOutletDirective.ɵfac = function ShowcaseOutletDirective_Factory(t) { return new (t || ShowcaseOutletDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };
ShowcaseOutletDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ShowcaseOutletDirective, selectors: [["", "cartShowcaseOutlet", ""]], inputs: { cartShowcaseOutlet: "cartShowcaseOutlet", cartShowcaseOutletInjector: "cartShowcaseOutletInjector", cartShowcaseOutletNgModuleFactory: "cartShowcaseOutletNgModuleFactory", cartShowcaseOutletItem: "cartShowcaseOutletItem", cartShowcaseOutletFormat: "cartShowcaseOutletFormat" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowcaseOutletDirective, [{
        type: Directive,
        args: [{
                selector: '[cartShowcaseOutlet]'
            }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, { cartShowcaseOutlet: [{
            type: Input
        }], cartShowcaseOutletInjector: [{
            type: Input
        }], cartShowcaseOutletNgModuleFactory: [{
            type: Input
        }], cartShowcaseOutletItem: [{
            type: Input
        }], cartShowcaseOutletFormat: [{
            type: Input
        }] }); })();
    return ShowcaseOutletDirective;
}());
ShowcaseOutletDirective.ctorParameters = function () { return [
    { type: ViewContainerRef, },
]; };
ShowcaseOutletDirective.propDecorators = {
    "cartShowcaseOutlet": [{ type: Input },],
    "cartShowcaseOutletInjector": [{ type: Input },],
    "cartShowcaseOutletNgModuleFactory": [{ type: Input },],
    "cartShowcaseOutletItem": [{ type: Input },],
    "cartShowcaseOutletFormat": [{ type: Input },],
};
var CART_ITEM_CLASS = new InjectionToken('CartItemClass');
var CART_SERVICE_CONFIGURATION = new InjectionToken('CartServiceConfiguration');
var CART_SERVICE_TYPE = new InjectionToken('CartServiceType');
var MemoryCartService = /** @class */ (function (_super) {
    __extends(MemoryCartService, _super);
    function MemoryCartService() {
        var _this = _super.apply(this, __spread(arguments)) || this;
        _this._items = [];
        _this._taxRate = 0;
        _this._shipping = 0;
        return _this;
    }
    MemoryCartService.prototype._addItem = function (item) {
        var foundIdx = this._items.findIndex(function (i) { return i.getId() === item.getId(); });
        if (foundIdx === -1) {
            this._items.push(item);
        }
        else {
            this._items[foundIdx] = item;
        }
        this.onItemAdded.emit(item);
        this.onItemsChanged.emit(this._items.length);
        this.onChange.emit({ change: 'items', value: this.getItems() });
    };
    MemoryCartService.prototype._removeItem = function (id) {
        var idx = this._items.findIndex(function (i) { return i.getId() === id; });
        if (idx !== -1) {
            var removed = this._items.splice(idx, 1);
            this.onItemRemoved.emit(removed[0]);
            this.onItemsChanged.emit(this._items.length);
            this.onChange.emit({ change: 'items', value: this.getItems() });
        }
    };
    MemoryCartService.prototype.getItem = function (id) {
        return this._items.find(function (i) { return i.getId() === id; });
    };
    MemoryCartService.prototype.getItems = function () {
        return this._items.slice();
    };
    MemoryCartService.prototype.itemCount = function () {
        return this._items.length;
    };
    MemoryCartService.prototype.entries = function () {
        return this._items.reduce(function (curr, i) { return (curr + i.getQuantity()); }, 0);
    };
    MemoryCartService.prototype.addItem = function (item) {
        this._addItem(item);
    };
    MemoryCartService.prototype.removeItem = function (id) {
        this._removeItem(id);
    };
    MemoryCartService.prototype.cost = function () {
        return this._items.reduce(function (curr, i) { return (curr + i.getPrice() * i.getQuantity()); }, 0);
    };
    MemoryCartService.prototype.clear = function () {
        this._items = [];
        this.onItemsChanged.emit(this._items.length);
        this.onChange.emit({ change: 'items', value: this.getItems() });
    };
    MemoryCartService.prototype.getShipping = function () {
        return this._shipping;
    };
    MemoryCartService.prototype.setShipping = function (shipping) {
        this._shipping = shipping;
        this.onShippingChange.emit(this._shipping);
        this.onChange.emit({ change: 'shipping', value: this._shipping });
    };
    MemoryCartService.prototype.getTaxRate = function () {
        return this._taxRate;
    };
    MemoryCartService.prototype.setTaxRate = function (taxRate) {
        this._taxRate = taxRate;
        this.onTaxChange.emit(this._taxRate);
        this.onChange.emit({ change: 'taxRate', value: this._taxRate });
    };
    MemoryCartService.prototype.isEmpty = function () {
        return this._items.length === 0;
    };
MemoryCartService.ɵfac = function MemoryCartService_Factory(t) { return new (t || MemoryCartService)(); };
MemoryCartService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MemoryCartService, factory: function (t) { return MemoryCartService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MemoryCartService, [{
        type: Injectable
    }], function () { return []; }, null); })();
    return MemoryCartService;
}(CartService));
MemoryCartService.ctorParameters = function () { return []; };
var BrowserStorageCartService = /** @class */ (function (_super) {
    __extends(BrowserStorageCartService, _super);
    function BrowserStorageCartService(itemClass, configuration) {
        var _this = _super.call(this) || this;
        _this.storageKey = configuration && configuration.storageKey ? configuration.storageKey : 'NgShoppingCart';
        _this.clearOnError = configuration && configuration.clearOnError !== undefined ? configuration.clearOnError : true;
        _this.itemClass = itemClass;
        return _this;
    }
    BrowserStorageCartService.prototype.resetStorage = function (error) {
        if (this.clearOnError || !error) {
            this.setTaxRate(0);
            this.setShipping(0);
            this.clear();
            this.save();
        }
        else {
            if (typeof error === 'string') {
                throw new Error(error);
            }
            throw error;
        }
    };
    BrowserStorageCartService.prototype.save = function () {
        this.storage.setItem(this.storageKey, JSON.stringify(this.toObject()));
    };
    BrowserStorageCartService.prototype.restore = function () {
        var _this = this;
        if (!this.storage.getItem(this.storageKey)) {
            this.resetStorage(false);
            return;
        }
        try {
            var sc = JSON.parse(this.storage.getItem(this.storageKey));
            if (!(sc.hasOwnProperty('items') && Array.isArray(sc.items) && sc.hasOwnProperty('taxRate') && sc.hasOwnProperty('shipping'))) {
                this.resetStorage('The object found under the key ' + this.storageKey + ' is not a valid cart object');
                return;
            }
            this._items = sc.items.map(function (i) {
                if (_this.itemClass.fromJSON) {
                    return _this.itemClass.fromJSON(i);
                }
                return new _this.itemClass(i);
            });
            this.setTaxRate(parseFloat(sc.taxRate));
            this.setShipping(parseFloat(sc.shipping));
        }
        catch (e) {
            this.resetStorage(e);
        }
    };
    BrowserStorageCartService.prototype.addItem = function (item) {
        _super.prototype.addItem.call(this, item);
        this.save();
    };
    BrowserStorageCartService.prototype.removeItem = function (id) {
        _super.prototype.removeItem.call(this, id);
        this.save();
    };
    BrowserStorageCartService.prototype.clear = function () {
        _super.prototype.clear.call(this);
        this.save();
    };
    BrowserStorageCartService.prototype.setShipping = function (shipping) {
        _super.prototype.setShipping.call(this, shipping);
        this.save();
    };
    BrowserStorageCartService.prototype.setTaxRate = function (tax) {
        _super.prototype.setTaxRate.call(this, tax);
        this.save();
    };
    return BrowserStorageCartService;
}(MemoryCartService));
BrowserStorageCartService.ctorParameters = function () { return [
    { type: CartItem, decorators: [{ type: Inject, args: [CART_ITEM_CLASS,] },] },
    { type: undefined, decorators: [{ type: Inject, args: [CART_SERVICE_CONFIGURATION,] },] },
]; };
var LocalStorageCartService = /** @class */ (function (_super) {
    __extends(LocalStorageCartService, _super);
    function LocalStorageCartService(itemClass, configuration) {
        var _this = _super.call(this, itemClass, configuration) || this;
        _this.storage = window.localStorage;
        _this.restore();
        return _this;
    }
LocalStorageCartService.ɵfac = function LocalStorageCartService_Factory(t) { return new (t || LocalStorageCartService)(ɵngcc0.ɵɵinject(CART_ITEM_CLASS), ɵngcc0.ɵɵinject(CART_SERVICE_CONFIGURATION)); };
LocalStorageCartService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LocalStorageCartService, factory: function (t) { return LocalStorageCartService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LocalStorageCartService, [{
        type: Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [CART_ITEM_CLASS]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [CART_SERVICE_CONFIGURATION]
            }] }]; }, null); })();
    return LocalStorageCartService;
}(BrowserStorageCartService));
LocalStorageCartService.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: Inject, args: [CART_ITEM_CLASS,] },] },
    { type: undefined, decorators: [{ type: Inject, args: [CART_SERVICE_CONFIGURATION,] },] },
]; };
var SessionStorageCartService = /** @class */ (function (_super) {
    __extends(SessionStorageCartService, _super);
    function SessionStorageCartService(itemClass, configuration) {
        var _this = _super.call(this, itemClass, configuration) || this;
        _this.storage = window.sessionStorage;
        _this.restore();
        return _this;
    }
SessionStorageCartService.ɵfac = function SessionStorageCartService_Factory(t) { return new (t || SessionStorageCartService)(ɵngcc0.ɵɵinject(CART_ITEM_CLASS), ɵngcc0.ɵɵinject(CART_SERVICE_CONFIGURATION)); };
SessionStorageCartService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SessionStorageCartService, factory: function (t) { return SessionStorageCartService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SessionStorageCartService, [{
        type: Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [CART_ITEM_CLASS]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [CART_SERVICE_CONFIGURATION]
            }] }]; }, null); })();
    return SessionStorageCartService;
}(BrowserStorageCartService));
SessionStorageCartService.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: Inject, args: [CART_ITEM_CLASS,] },] },
    { type: undefined, decorators: [{ type: Inject, args: [CART_SERVICE_CONFIGURATION,] },] },
]; };
var BaseCartItem = /** @class */ (function (_super) {
    __extends(BaseCartItem, _super);
    function BaseCartItem(itemData) {
        if (itemData === void 0) { itemData = {}; }
        var _this = _super.call(this) || this;
        _this.id = itemData.id || 0;
        _this.name = itemData.name || '';
        _this.price = itemData.price || 0;
        _this.image = itemData.image || '';
        _this.quantity = itemData.quantity || 1;
        _this.data = itemData.data || {};
        return _this;
    }
    BaseCartItem.prototype.getId = function () {
        return this.id;
    };
    BaseCartItem.prototype.setId = function (id) {
        this.id = id;
    };
    BaseCartItem.prototype.getName = function () {
        return this.name;
    };
    BaseCartItem.prototype.setName = function (name) {
        this.name = name;
    };
    BaseCartItem.prototype.getPrice = function () {
        return this.price;
    };
    BaseCartItem.prototype.setPrice = function (price) {
        this.price = price;
    };
    BaseCartItem.prototype.getQuantity = function () {
        return this.quantity;
    };
    BaseCartItem.prototype.setQuantity = function (quantity) {
        this.quantity = quantity;
    };
    BaseCartItem.prototype.getImage = function () {
        return this.image;
    };
    BaseCartItem.prototype.setImage = function (image) {
        this.image = image;
    };
    BaseCartItem.prototype.getData = function () {
        return this.data;
    };
    BaseCartItem.prototype.setData = function (data) {
        this.data = data;
    };
    return BaseCartItem;
}(CartItem));
function serviceFactory(serviceType, itemClass, configuration) {
    switch (serviceType) {
        case 'localStorage':
            return new LocalStorageCartService(itemClass, configuration);
        case 'sessionStorage':
            return new SessionStorageCartService(itemClass, configuration);
        default:
            return new MemoryCartService();
    }
}
function setupService(serviceType) {
    return {
        provide: CART_SERVICE_TYPE,
        useValue: serviceType || 'localStorage'
    };
}
function setItemClass(itemClass) {
    return {
        provide: CART_ITEM_CLASS,
        useValue: itemClass || BaseCartItem
    };
}
function setServiceConfiguration(serviceType, serviceOptions) {
    return {
        provide: CART_SERVICE_CONFIGURATION,
        useValue: serviceType !== 'memory' ? (!serviceOptions ? {
            storageKey: 'NgShoppingCart',
            clearOnError: true
        } : serviceOptions) : null
    };
}
var CartCurrencyPipe = /** @class */ (function () {
    function CartCurrencyPipe(_locale) {
        this._locale = _locale;
        this.currencyFormatter = new CurrencyPipe(this._locale);
    }
    CartCurrencyPipe.prototype.transform = function (value, format) {
        if (format === void 0) { format = 'auto'; }
        if (!value && value !== 0) {
            return null;
        }
        var _a = parseLocaleFormat(format), currencyCode = _a.currencyCode, display = _a.display, digitsInfo = _a.digitsInfo, locale = _a.locale;
        return this.currencyFormatter.transform(value, currencyCode, display, digitsInfo, locale);
    };
CartCurrencyPipe.ɵfac = function CartCurrencyPipe_Factory(t) { return new (t || CartCurrencyPipe)(ɵngcc0.ɵɵdirectiveInject(LOCALE_ID)); };
CartCurrencyPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "cartCurrency", type: CartCurrencyPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CartCurrencyPipe, [{
        type: Pipe,
        args: [{ name: 'cartCurrency' }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [LOCALE_ID]
            }] }]; }, null); })();
    return CartCurrencyPipe;
}());
CartCurrencyPipe.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID,] },] },
]; };
var ShoppingCartModule = /** @class */ (function () {
    function ShoppingCartModule() {
    }
    ShoppingCartModule.forRoot = function (options) {
        if (options === void 0) { options = {}; }
        return {
            ngModule: ShoppingCartModule,
            providers: [
                setItemClass(options.itemType),
                setupService(options.serviceType),
                setServiceConfiguration(options.serviceType, options.serviceOptions),
                {
                    provide: CartService,
                    useFactory: serviceFactory,
                    deps: [CART_SERVICE_TYPE, CART_ITEM_CLASS, CART_SERVICE_CONFIGURATION]
                }
            ],
        };
    };
    ShoppingCartModule.forChild = function () {
        return {
            ngModule: ShoppingCartModule
        };
    };
ShoppingCartModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ShoppingCartModule });
ShoppingCartModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ShoppingCartModule_Factory(t) { return new (t || ShoppingCartModule)(); }, imports: [[
            CommonModule,
            HttpClientModule,
        ],
        CommonModule,
        HttpClientModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ShoppingCartModule, { declarations: function () { return [AddToCartEditorComponent,
        AddToCartComponent,
        CartCheckoutComponent,
        CartSummaryComponent,
        CartShowcaseComponent,
        CartViewComponent,
        ShowcaseOutletDirective,
        CartShowcaseItemComponent,
        CartCurrencyPipe]; }, imports: function () { return [CommonModule,
        HttpClientModule]; }, exports: function () { return [AddToCartEditorComponent,
        AddToCartComponent,
        CartCheckoutComponent,
        CartSummaryComponent,
        CartShowcaseComponent,
        CartViewComponent,
        CartShowcaseItemComponent,
        CartCurrencyPipe,
        CommonModule,
        HttpClientModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShoppingCartModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    AddToCartEditorComponent,
                    AddToCartComponent,
                    CartCheckoutComponent,
                    CartSummaryComponent,
                    CartShowcaseComponent,
                    CartViewComponent,
                    ShowcaseOutletDirective,
                    CartShowcaseItemComponent,
                    CartCurrencyPipe,
                ],
                imports: [
                    CommonModule,
                    HttpClientModule,
                ],
                exports: [
                    AddToCartEditorComponent,
                    AddToCartComponent,
                    CartCheckoutComponent,
                    CartSummaryComponent,
                    CartShowcaseComponent,
                    CartViewComponent,
                    CartShowcaseItemComponent,
                    CartCurrencyPipe,
                    CommonModule,
                    HttpClientModule
                ],
                entryComponents: [CartShowcaseItemComponent]
            }]
    }], function () { return []; }, null); })();
    return ShoppingCartModule;
}());
ShoppingCartModule.ctorParameters = function () { return []; };

export { AddToCartComponent, CartCheckoutComponent, CartSummaryComponent, CartShowcaseComponent, CartShowcaseItemComponent, CartViewComponent, CartCurrencyPipe, ShoppingCartModule, CART_ITEM_CLASS, CART_SERVICE_CONFIGURATION, CART_SERVICE_TYPE, CartService, MemoryCartService, LocalStorageCartService, SessionStorageCartService, CartItem, BaseCartItem, parseLocaleFormat, AddToCartEditorComponent as ɵa, ShowcaseOutletDirective as ɵb, serviceFactory as ɵc, setItemClass as ɵe, setServiceConfiguration as ɵf, setupService as ɵd, BrowserStorageCartService as ɵg };

//# sourceMappingURL=ng-shopping-cart.js.map